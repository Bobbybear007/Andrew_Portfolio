@font-face {
    font-family: 'Josefin Sans';
    src: url('assets/fonts/JosefinSans-VariableFont_wght.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

/* Add background gradient for the entire page */
body {
    font-family: 'Josefin Sans', sans-serif;
    background: linear-gradient(to bottom, #0d0d0d 0%, #0d0d0d 40%, #1e025b 60%, #004c98 100%);
    min-height: 100vh;
    overflow: hidden;
    color: white;
}

body.allow-scroll {
    overflow-y: auto;
}

/* Scale header content with viewport height and width */
.neon-header {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    text-align: center;
    opacity: 0;
    font-size: calc(3rem + 1vw); /* Scale font size */
    letter-spacing: calc(8px + 0.5vw); /* Scale letter spacing */
    transition: transform 1.5s ease, opacity 1.5s ease;
    animation: fadeInGrow 2s forwards;
    animation-delay: 2.2s;
}

@keyframes fadeInGrow {
    0% {
        opacity: 0;
        transform: scale(0.8);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

/* Scale image responsively */
.neon-header img {
    width: 100%;
    height: auto;
    max-width: 100vw;
}

/* Loading bar */
.sweep-line {
    position: fixed;
    width: 100vw;
    height: 5vh; /* Scale height relative to viewport */
    background: linear-gradient(90deg, rgba(104, 0, 190, 0.7), rgb(0, 114, 185));
    top: 50%;
    left: -100vw;
    transform: translateY(-50%);
    animation: sweep 2s forwards;
}

@keyframes sweep {
    0% {
        left: -100vw;
    }
    100% {
        left: 100vw;
    }
}

/* Project section */
.content {
    text-align: center;
    padding: 5vh 0; /* Use vh for padding to scale with viewport */
    margin-top: 20vh; /* Move the projects further down */
    opacity: 0;
    visibility: hidden;
    transition: opacity 1s ease, visibility 0s linear 1s;
}

.content.show {
    opacity: 1;
    visibility: visible;
}

/* Scale project cards with the viewport */
.project {
    margin: 4vh 0;
    padding: 2vh 2vw;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.project:hover {
    transform: translateY(-1vh);
    box-shadow: 0 0 2vh rgba(0, 150, 255, 0.5);
}

.project h2 {
    font-size: calc(2rem + 0.5vw); /* Responsive font size */
    color: #ccc;
}

.project p {
    font-size: calc(1.2rem + 0.2vw); /* Responsive font size */
    color: #aaa;
}

/* Continuous particles */
.particle {
    position: absolute;
    width: calc(8px + 0.2vw); /* Scale with viewport */
    height: calc(8px + 0.2vw);
    background-color: rgb(0, 149, 255);
    border-radius: 50%;
    pointer-events: none;
    animation: float-particle 6s ease-in-out infinite;
    opacity: 0.7;
}

@keyframes float-particle {
    0% {
        transform: translate(0, 0);
    }
    50% {
        transform: translate(calc(-10vw + 20vw * random()), calc(-10vh + 20vh * random()));
    }
    100% {
        transform: translate(calc(-5vw + 10vw * random()), calc(-5vh + 10vh * random()));
    }
}
